---
- name: Provision a new AWS instance
  hosts: localhost
  connection: local
  tags: provisioning
  vars:
    instance_type: t2.micro
    security_group: sg_loganswalk_app_srv
    image: ami-9eaa1cf6
    region: us-east-1
    keypair: loganswalk_ec2
  tasks:
    - name: Create app server security group
      local_action:
        module: ec2_group
        name: sg_loganswalk_app_srv
        description: Loganswalk app servers
        region: us-east-1
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            from_port: 1
            to_port: 49151
            cidr_ip: 0.0.0.0/0

    - name: Launch an instance
      local_action:
        module: ec2
        region: us-east-1
        keypair: loganswalk_ec2
        group: sg_loganswalk_app_srv
        instance_type: t2.micro
        image: ami-9eaa1cf6
        count: 1
        wait: yes
      register: ec2

    - name: Add instances to local host group
      local_action: add_host hostname={{ item.public_ip }} groupname=sg_loganswalk_app_srv
      with_items: ec2.instances

    - name: Write new instance to local hosts file
      local_action: lineinfile dest=hosts regexp="{{ item.public_dns_name }}" insertafter="[app_servers]" line="{{ item.public_dns_name }} ansible_ssh_private_key_file=~/.ssh/{{ keypair }}.pem"
      with_items: ec2.instances
      #"

    - name: Add tag to instances
      local_action: ec2_tag resource={{ item.id }} region=us-east-1 state=present
      with_items: ec2.instances
      args:
        tags:
          Name: Loganswalk

    - name: Wait for SSH to become available
      pause: seconds=45

- name: Configure provisioned instances
  hosts: sg_loganswalk_app_srv
  user: ubuntu
  sudo: True
  tasks:
    - include: tasks/install-awscli.yml


#- name: Provision an EC2 node
#    hosts: local
#    connection: local
#    gather_facts: False
#    tags: provisioning
#    vars:
#      instance_type: t1.micro
#      security_group: sg_thingy
#      image: ami-a73264ce
#      region: us-east-1
#      keypair: ansible_ec2
#    tasks:
#      - name: Launch new Instance
#        local_action: ec2 instance_tags="Name=AnsibleTest" group={{ security_group }} instance_type={{ instance_type}} image={{ image }} wait=true region={{ region }} keypair={{ keypair }}
#        register: ec2
#      - name: Add instance to local host group
#        local_action: lineinfile dest=hosts regexp="{{ item.public_dns_name }}" insertafter="[launched]" line="{{ item.public_dns_name }} ansible_ssh_private_key_file=~/.ssh/{{ keypair }}.pem"
#        with_items: ec2.instances
#        #"
#      - name: Wait for SSH to come up
#        local_action: wait_for host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
#        with_items: ec2.instances
#  - name: With the newly provisioned EC2 node configure that thing
#    hosts: launched # This uses the hosts that we put into the in-memory hosts repository with the add_host module.
#    sudo: yes # On EC2 nodes, this is automatically passwordless.
#    remote_user: ubuntu # This is the username for all ubuntu images, rather than root, or something weird.
#    gather_facts: True  #We need to re-enable this, as we turned it off earlier.