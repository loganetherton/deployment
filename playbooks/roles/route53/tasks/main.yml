---
- name: Get EC2 facts
  ec2_facts:

- name: Get instance variables
  debug: var=ansible_ec2_public_ipv4

- name: Retrieve the current A records for Loganswalk.com
  local_action: route53 command=get zone=loganswalk.com record=loganswalk.com type=A
  register: a_records

#- name: Retrieve the current wildcard A records for Loganswalk.com
#  local_action: route53 command=get zone=loganswalk.com record="*.loganswalk.com" type=A
#  register: wildcard_a_records
#
#- name:
#  debug: var=a_records.results
#
#- name: Delete current A record for Loganswalk.com if they exist
#  local_action: route53 command=delete zone=loganswalk.com record={{a_records.set.record}} type={{a_records.set.type}} value={{a_records.set.value}}
#  when: a_records|bool
#
#- name: Delete current wildcard A record for Loganswalk.com if they exist
#  local_action: route53 command=delete zone=loganswalk.com
#    record={{wildcard_a_records.set.record}} type={{wildcard_a_records.set.type}} value={{wildcard_a_records.set.value}}
#  when: a_records|bool

#############################
# This is a little weird getting this conditional to work, need to revisit
#############################

- name: Add new A record for running instance
  local_action: route53 command=create zone="loganswalk.com" record="loganswalk.com" type=A ttl=3600 value="{{ansible_ec2_public_ipv4}}"
  when: not a_records|bool

- name: Add new wildcard A record for running instance
  local_action: route53 command=create zone="loganswalk.com" record="*.loganswalk.com" type=A ttl=3600 value="{{ansible_ec2_public_ipv4}}"
  when: not a_records|bool